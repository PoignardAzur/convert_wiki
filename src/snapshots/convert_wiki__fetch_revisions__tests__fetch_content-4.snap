---
source: src/fetch_revisions.rs
expression: "get_parsed_revisions(resp.query, \"EXWM\".into())"
---
[
    ParsedRevision {
        revid: 688841,
        timestamp: "2021-07-21T22:35:05Z",
        title: "EXWM",
        user: "Flyingpig",
        comment: "/* Configuration */ Separate lines in a paragraph by [[Help:Style/White space|a single space]].",
        content: "[[Category:Tiling WMs]]\n[[ja:EXWM]]\n{{Related articles start}}\n{{Related|Window manager}}\n{{Related articles end}}\nEXWM is a [[window manager]] based on [[Emacs]].\n\n== Installing ==\n\nMake sure you have {{Pkg|emacs}} installed. You will also need {{Pkg|xorg-xinit}}.\n\nInstall EXWM from within Emacs: {{ic|M-x package-install RET exwm RET}}.\n\nEdit [[xinitrc]] and add:\n\n exec emacs\n\nIn your emacs init file, add:\n\n (require 'exwm)\n (require 'exwm-config)\n (exwm-config-default)\n\nto use the default settings. If you want to use your own settings, use {{ic|(exwm-enable)}} instead of {{ic|(exwm-config-default)}} (and you do not need to {{ic|(require 'exwm-config)}}).\n\nIt's also possible to start emacs in server mode and to start EXWM from commandline. See\nhttps://github.com/ch11ng/exwm/issues/284.\n\n== Configuration ==\n\nEXWM is a full X window manager, so Emacs manages X windows such as your browser, vlc, etc. You may use all the normal Emacs window commands to control window placement. In X windows (i.e. not \"normal\" Emacs buffers), some commands are caught by EXWM and not passed through to the program. These keys are store in {{ic|exwm-input-prefix-keys}}. Alternatively, you can set global commands by customizing {{ic|exwm-input-global-keys}}. If you would rather set {{ic|exwm-input-global-keys}} in elisp rather than using the customization feature, be aware that you may have to restart EXWM (and set {{ic|exwm-input-global-keys}} before enabling exwm). Alternatively, you could try using the {{ic|cset}} macro defined [https://oremacs.com/2015/01/17/setting-up-ediff/ here], which should work for redefining {{ic|exwm-input-global-keys}} without restarting EXWM. To use s-& as a keyboard shortcut to launch a program (e.g. firefox), you can do:\n\n{{bc|\n(setq exwm-input-global-keys `(,(kbd \"s-&\") .\n                               (lambda (command)\n                                 (interactive (list (read-shell-command \"$ \")))\n                                 (start-process-shell-command command nil command))))\n}}\n\n=== Multi-monitor ===\n\nEXWM can handle multi-monitor through the (optional) {{ic|exwm-randr}} package. You will need to install [[xrandr]] and enable exwm-randr in your emacs configuration file before calling {{ic|(exwm-enable)}}. You will need to adjust the values of \"DP-1\" and \"DP-2\" to the values your computer uses; call {{ic|xrandr}} at the command line with no arguments to see available outputs.\n\n{{bc|\n(require 'exwm-randr)\n(setq exwm-randr-workspace-output-plist '(1 \"DP-1\"))\n(add-hook 'exwm-randr-screen-change-hook\n          (lambda ()\n            (start-process-shell-command\n             \"xrandr\" nil \"xrandr --output DP-1 --right-of DP-2 --auto\")))\n(exwm-randr-enable)\n}}\n\n=== System tray ===\n\nEXWM supports a system tray, but it is not enabled by default. To enable it, put the following before {{ic|(exwm-enable)}} in your dotemacs file:\n\n{{bc|\n(require 'exwm-systemtray)\n(exwm-systemtray-enable)\n}}\n\nYou may need to adjust the height afterwards; this can be adjusted with the {{ic|exwm-systemtray-height}} variable.\n\n== Embedding within LXDE ==\n\nEXWM can be used in place of openbox, allowing you to still use [[LXDE]] session management tools.\n\nBefore doing this, make sure you have your init file for emacs already set up to run EXWM (see above)\n\n''lxsession'' uses the [[window manager]] defined in {{ic|~/.config/lxsession/LXDE/desktop.conf}} ([[Openbox]] by default). If this file does not exist, it searches in {{ic|/etc/xdg/lxsession/LXDE/desktop.conf}} instead.\n\nReplace {{ic|openbox-lxde}} in either file with emacs:\n\n [Session]\n window_manager=emacs\n\n=== lxsession-logout ===\n\nYou can create the following function within emacs to log out, shutdown, or reboot cleanly from within a LXDE session:\n\n (defun exwm-logout ()\n   (interactive)\n   (recentf-save-list)\n   (save-some-buffers)\n   (start-process-shell-command \"logout\" nil \"lxsession-logout\"))\n\nThis stores your recentf history to disk, prompts you to save, discard, or diff changes within unsaved buffers, then launches the logout manager. You can bind this function to any key within emacs.\n\n== Troubleshooting ==\n\n=== Screen tearing in Firefox ===\n\nYou may experience screen tearing in some programs, particularly Firefox. You can try:\n\n* turning off smooth scrolling in Preferences > Advanced > Use Smooth Scrolling.\n* installing (and activating) [[Compton]] or another composite manager: [[Xorg#Composite]].\n\n=== Confusing Buffer Names ===\n\nYou may see the buffer names being named '*EXWM*'. This makes it confusing while switching between buffers .EXWM allows the buffers to name themself . To allow buffers to name themself put  the following in your dotemacs .\n{{bc|\n;; Make buffer name more meaningful\n(add-hook 'exwm-update-class-hook\n          (lambda ()\n          (exwm-workspace-rename-buffer exwm-class-name)))\n}}\n\n== See also ==\n\n* [https://github.com/ch11ng/exwm/wiki EXWM wiki]",
    },
    ParsedRevision {
        revid: 688839,
        timestamp: "2021-07-21T22:28:09Z",
        title: "EXWM",
        user: "Ygmatt",
        comment: "Add note about the csetq macro working to change the value of exwm-input-global-keys without restarting EXWM",
        content: "[[Category:Tiling WMs]]\n[[ja:EXWM]]\n{{Related articles start}}\n{{Related|Window manager}}\n{{Related articles end}}\nEXWM is a [[window manager]] based on [[Emacs]].\n\n== Installing ==\n\nMake sure you have {{Pkg|emacs}} installed. You will also need {{Pkg|xorg-xinit}}.\n\nInstall EXWM from within Emacs: {{ic|M-x package-install RET exwm RET}}.\n\nEdit [[xinitrc]] and add:\n\n exec emacs\n\nIn your emacs init file, add:\n\n (require 'exwm)\n (require 'exwm-config)\n (exwm-config-default)\n\nto use the default settings. If you want to use your own settings, use {{ic|(exwm-enable)}} instead of {{ic|(exwm-config-default)}} (and you do not need to {{ic|(require 'exwm-config)}}).\n\nIt's also possible to start emacs in server mode and to start EXWM from commandline. See\nhttps://github.com/ch11ng/exwm/issues/284.\n\n== Configuration ==\n\nEXWM is a full X window manager, so Emacs manages X windows such as your browser, vlc, etc. You may use all the normal Emacs window commands to control window placement. In X windows (i.e. not \"normal\" Emacs buffers), some commands are caught by EXWM and not passed through to the program. These keys are store in {{ic|exwm-input-prefix-keys}}. Alternatively, you can set global commands by customizing {{ic|exwm-input-global-keys}}. If you would rather set {{ic|exwm-input-global-keys}} in elisp rather than using the customization feature, be aware that you may have to restart EXWM (and set {{ic|exwm-input-global-keys}} before enabling exwm).  Alternatively, you could try using the {{ic|cset}} macro defined [https://oremacs.com/2015/01/17/setting-up-ediff/ here], which should work for redefining {{ic|exwm-input-global-keys}} without restarting EXWM. To use s-& as a keyboard shortcut to launch a program (e.g. firefox), you can do:\n\n{{bc|\n(setq exwm-input-global-keys `(,(kbd \"s-&\") .\n                               (lambda (command)\n                                 (interactive (list (read-shell-command \"$ \")))\n                                 (start-process-shell-command command nil command))))\n}}\n\n=== Multi-monitor ===\n\nEXWM can handle multi-monitor through the (optional) {{ic|exwm-randr}} package. You will need to install [[xrandr]] and enable exwm-randr in your emacs configuration file before calling {{ic|(exwm-enable)}}. You will need to adjust the values of \"DP-1\" and \"DP-2\" to the values your computer uses; call {{ic|xrandr}} at the command line with no arguments to see available outputs.\n\n{{bc|\n(require 'exwm-randr)\n(setq exwm-randr-workspace-output-plist '(1 \"DP-1\"))\n(add-hook 'exwm-randr-screen-change-hook\n          (lambda ()\n            (start-process-shell-command\n             \"xrandr\" nil \"xrandr --output DP-1 --right-of DP-2 --auto\")))\n(exwm-randr-enable)\n}}\n\n=== System tray ===\n\nEXWM supports a system tray, but it is not enabled by default. To enable it, put the following before {{ic|(exwm-enable)}} in your dotemacs file:\n\n{{bc|\n(require 'exwm-systemtray)\n(exwm-systemtray-enable)\n}}\n\nYou may need to adjust the height afterwards; this can be adjusted with the {{ic|exwm-systemtray-height}} variable.\n\n== Embedding within LXDE ==\n\nEXWM can be used in place of openbox, allowing you to still use [[LXDE]] session management tools.\n\nBefore doing this, make sure you have your init file for emacs already set up to run EXWM (see above)\n\n''lxsession'' uses the [[window manager]] defined in {{ic|~/.config/lxsession/LXDE/desktop.conf}} ([[Openbox]] by default). If this file does not exist, it searches in {{ic|/etc/xdg/lxsession/LXDE/desktop.conf}} instead.\n\nReplace {{ic|openbox-lxde}} in either file with emacs:\n\n [Session]\n window_manager=emacs\n\n=== lxsession-logout ===\n\nYou can create the following function within emacs to log out, shutdown, or reboot cleanly from within a LXDE session:\n\n (defun exwm-logout ()\n   (interactive)\n   (recentf-save-list)\n   (save-some-buffers)\n   (start-process-shell-command \"logout\" nil \"lxsession-logout\"))\n\nThis stores your recentf history to disk, prompts you to save, discard, or diff changes within unsaved buffers, then launches the logout manager. You can bind this function to any key within emacs.\n\n== Troubleshooting ==\n\n=== Screen tearing in Firefox ===\n\nYou may experience screen tearing in some programs, particularly Firefox. You can try:\n\n* turning off smooth scrolling in Preferences > Advanced > Use Smooth Scrolling.\n* installing (and activating) [[Compton]] or another composite manager: [[Xorg#Composite]].\n\n=== Confusing Buffer Names ===\n\nYou may see the buffer names being named '*EXWM*'. This makes it confusing while switching between buffers .EXWM allows the buffers to name themself . To allow buffers to name themself put  the following in your dotemacs .\n{{bc|\n;; Make buffer name more meaningful\n(add-hook 'exwm-update-class-hook\n          (lambda ()\n          (exwm-workspace-rename-buffer exwm-class-name)))\n}}\n\n== See also ==\n\n* [https://github.com/ch11ng/exwm/wiki EXWM wiki]",
    },
]
